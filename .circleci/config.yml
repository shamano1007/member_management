# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          DATABASE_HOST: 127.0.0.1
          DATABASE_USER: root
          DATABASE_PASSWORD: circleci
          RAILS_ENV: test
          CC_TEST_REPORTER_ID: e37553314b37fb2cf28f69428d7d814c2620be85ba3d1d3ecc8e40150564807e
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: circleci
          MYSQL_ROOT_HOST: '%'

    working_directory: ~/member_management

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: mv ./config/database.yml.sample ./config/database.yml
      - run: bundle exec rake db:create
      - run: bundle exec rake db:migrate

      # run rubocop
      - run:
          name: run rubocop
          command: bundle exec rubocop

      # Download test-reporter
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      # run tests!
      - run:
          name: run tests
          command: |
            ./cc-test-reporter before-build
            mkdir /tmp/test-results
            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress
            ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
